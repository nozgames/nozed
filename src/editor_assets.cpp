//
// Auto-generated asset header - DO NOT EDIT MANUALLY
// Generated by NoZ Game Engine Asset Importer
//

#include <noz/noz.h>
#include "editor_assets.h"


// @Font
Font* FONT_SEGUISB = nullptr;

// @Mesh
Mesh* MESH_SHADER = nullptr;

// @Shader
Shader* SHADER_VFX = nullptr;
Shader* SHADER_UI_VIGNETTE = nullptr;
Shader* SHADER_UI = nullptr;
Shader* SHADER_TEXT = nullptr;
Shader* SHADER_LIT = nullptr;
Shader* SHADER_SOLID = nullptr;

// @StyleSheet
StyleSheet* STYLESHEET_VIEW = nullptr;
StyleSheet* STYLESHEET_NOTIFICATIONS = nullptr;
StyleSheet* STYLESHEET_MESH_EDITOR = nullptr;
StyleSheet* STYLESHEET_COMMAND_PALETTE = nullptr;

// @Texture
Texture* TEXTURE_EDITOR_PALETTE = nullptr;

// @name
const Name* NAME_TEXT = nullptr;
const Name* NAME_CONTAINER = nullptr;
const Name* NAME_INPUT = nullptr;
const Name* NAME_INPUT_SMALL = nullptr;
const Name* NAME_COLON = nullptr;
const Name* NAME_CURSOR = nullptr;
const Name* NAME_PREVIEW = nullptr;
const Name* NAME_COLORS = nullptr;
const Name* NAME_ITEM = nullptr;
const Name* NAME_ITEM_TEXT = nullptr;
const Name* NAME_ASSET_NAME_CONTAINER = nullptr;
const Name* NAME_ASSET_NAME = nullptr;
const Name* NAME_A = nullptr;
const Name* NAME_E = nullptr;
const Name* NAME_M = nullptr;
const Name* NAME_R = nullptr;
const Name* NAME_NEW = nullptr;
const Name* NAME_N = nullptr;
const Name* NAME_EDIT = nullptr;
const Name* NAME_S = nullptr;
const Name* NAME_RENAME = nullptr;
const Name* NAME_SAVE = nullptr;
const Name* NAME_MESH = nullptr;
const Name* NAME_SKELETON = nullptr;
const Name* NAME_ANIMATION = nullptr;

// @path
const Name* PATH_SHADER_VFX = nullptr;
const Name* PATH_SHADER_UI_VIGNETTE = nullptr;
const Name* PATH_SHADER_UI = nullptr;
const Name* PATH_SHADER_TEXT = nullptr;
const Name* PATH_SHADER_LIT = nullptr;
const Name* PATH_STYLESHEET_VIEW = nullptr;
const Name* PATH_STYLESHEET_NOTIFICATIONS = nullptr;
const Name* PATH_STYLESHEET_MESH_EDITOR = nullptr;
const Name* PATH_STYLESHEET_COMMAND_PALETTE = nullptr;
const Name* PATH_TEXTURE_EDITOR_PALETTE = nullptr;
const Name* PATH_SHADER_SOLID = nullptr;
const Name* PATH_MESH_SHADER = nullptr;
const Name* PATH_FONT_SEGUISB = nullptr;

// @load
bool LoadAssets(Allocator* allocator)
{
    // @name
    NAME_TEXT = GetName("text");
    NAME_CONTAINER = GetName("container");
    NAME_INPUT = GetName("input");
    NAME_INPUT_SMALL = GetName("input_small");
    NAME_COLON = GetName("colon");
    NAME_CURSOR = GetName("cursor");
    NAME_PREVIEW = GetName("preview");
    NAME_COLORS = GetName("colors");
    NAME_ITEM = GetName("item");
    NAME_ITEM_TEXT = GetName("item_text");
    NAME_ASSET_NAME_CONTAINER = GetName("asset_name_container");
    NAME_ASSET_NAME = GetName("asset_name");
    NAME_A = GetName("a");
    NAME_E = GetName("e");
    NAME_M = GetName("m");
    NAME_R = GetName("r");
    NAME_NEW = GetName("new");
    NAME_N = GetName("n");
    NAME_EDIT = GetName("edit");
    NAME_S = GetName("s");
    NAME_RENAME = GetName("rename");
    NAME_SAVE = GetName("save");
    NAME_MESH = GetName("mesh");
    NAME_SKELETON = GetName("skeleton");
    NAME_ANIMATION = GetName("animation");

    // @path
    PATH_SHADER_VFX = GetName("vfx");
    PATH_SHADER_UI_VIGNETTE = GetName("ui_vignette");
    PATH_SHADER_UI = GetName("ui");
    PATH_SHADER_TEXT = GetName("text");
    PATH_SHADER_LIT = GetName("lit");
    PATH_STYLESHEET_VIEW = GetName("view");
    PATH_STYLESHEET_NOTIFICATIONS = GetName("notifications");
    PATH_STYLESHEET_MESH_EDITOR = GetName("mesh_editor");
    PATH_STYLESHEET_COMMAND_PALETTE = GetName("command_palette");
    PATH_TEXTURE_EDITOR_PALETTE = GetName("editor_palette");
    PATH_SHADER_SOLID = GetName("solid");
    PATH_MESH_SHADER = GetName("shader");
    PATH_FONT_SEGUISB = GetName("seguisb");

    // @Font
    NOZ_LOAD_FONT(allocator, PATH_FONT_SEGUISB, FONT_SEGUISB);

    static Font* _FONT[] = {
        FONT_SEGUISB,
        nullptr
    };

    FONT = _FONT;

    // @Mesh
    NOZ_LOAD_MESH(allocator, PATH_MESH_SHADER, MESH_SHADER);

    static Mesh* _MESH[] = {
        MESH_SHADER,
        nullptr
    };

    MESH = _MESH;

    // @Shader
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_VFX, SHADER_VFX);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_UI_VIGNETTE, SHADER_UI_VIGNETTE);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_UI, SHADER_UI);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_TEXT, SHADER_TEXT);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_LIT, SHADER_LIT);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_SOLID, SHADER_SOLID);

    static Shader* _SHADER[] = {
        SHADER_VFX,
        SHADER_UI_VIGNETTE,
        SHADER_UI,
        SHADER_TEXT,
        SHADER_LIT,
        SHADER_SOLID,
        nullptr
    };

    SHADER = _SHADER;

    // @StyleSheet
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_VIEW, STYLESHEET_VIEW);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_NOTIFICATIONS, STYLESHEET_NOTIFICATIONS);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_MESH_EDITOR, STYLESHEET_MESH_EDITOR);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_COMMAND_PALETTE, STYLESHEET_COMMAND_PALETTE);

    static StyleSheet* _STYLESHEET[] = {
        STYLESHEET_VIEW,
        STYLESHEET_NOTIFICATIONS,
        STYLESHEET_MESH_EDITOR,
        STYLESHEET_COMMAND_PALETTE,
        nullptr
    };

    STYLESHEET = _STYLESHEET;

    // @Texture
    NOZ_LOAD_TEXTURE(allocator, PATH_TEXTURE_EDITOR_PALETTE, TEXTURE_EDITOR_PALETTE);

    static Texture* _TEXTURE[] = {
        TEXTURE_EDITOR_PALETTE,
        nullptr
    };

    TEXTURE = _TEXTURE;

    return true;
}

// @unload
void UnloadAssets()
{
    // @Font
    Free(FONT_SEGUISB);

    // @Mesh
    Free(MESH_SHADER);

    // @Shader
    Free(SHADER_VFX);
    Free(SHADER_UI_VIGNETTE);
    Free(SHADER_UI);
    Free(SHADER_TEXT);
    Free(SHADER_LIT);
    Free(SHADER_SOLID);

    // @StyleSheet
    Free(STYLESHEET_VIEW);
    Free(STYLESHEET_NOTIFICATIONS);
    Free(STYLESHEET_MESH_EDITOR);
    Free(STYLESHEET_COMMAND_PALETTE);

    // @Texture
    Free(TEXTURE_EDITOR_PALETTE);
}

#ifdef NOZ_EDITOR

void HotloadAsset(const Name* incoming_name)
{
    // @Font
    NOZ_RELOAD_FONT(PATH_FONT_SEGUISB, FONT_SEGUISB);

    // @Mesh
    NOZ_RELOAD_MESH(PATH_MESH_SHADER, MESH_SHADER);

    // @Shader
    NOZ_RELOAD_SHADER(PATH_SHADER_VFX, SHADER_VFX);
    NOZ_RELOAD_SHADER(PATH_SHADER_UI_VIGNETTE, SHADER_UI_VIGNETTE);
    NOZ_RELOAD_SHADER(PATH_SHADER_UI, SHADER_UI);
    NOZ_RELOAD_SHADER(PATH_SHADER_TEXT, SHADER_TEXT);
    NOZ_RELOAD_SHADER(PATH_SHADER_LIT, SHADER_LIT);
    NOZ_RELOAD_SHADER(PATH_SHADER_SOLID, SHADER_SOLID);

    // @StyleSheet
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_VIEW, STYLESHEET_VIEW);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_NOTIFICATIONS, STYLESHEET_NOTIFICATIONS);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_MESH_EDITOR, STYLESHEET_MESH_EDITOR);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_COMMAND_PALETTE, STYLESHEET_COMMAND_PALETTE);

    // @Texture
    NOZ_RELOAD_TEXTURE(PATH_TEXTURE_EDITOR_PALETTE, TEXTURE_EDITOR_PALETTE);
}

#endif // NOZ_EDITOR
