//
// Auto-generated asset header - DO NOT EDIT MANUALLY
// Generated by NoZ Game Engine Asset Importer
//

#include <noz/noz.h>
#include "editor_assets.h"


// @Font
Font* FONT_SEGUISB = nullptr;

// @Shader
Shader* SHADER_VFX = nullptr;
Shader* SHADER_UI = nullptr;
Shader* SHADER_TEXT = nullptr;
Shader* SHADER_LIT = nullptr;

// @StyleSheet
StyleSheet* STYLESHEET_VIEW = nullptr;
StyleSheet* STYLESHEET_NOTIFICATIONS = nullptr;
StyleSheet* STYLESHEET_MESH_EDITOR = nullptr;
StyleSheet* STYLESHEET_COMMAND_PALETTE = nullptr;

// @Texture
Texture* TEXTURE_PALETTE = nullptr;

// @name
const Name* NAME_COLOR_PICKER_IMAGE = nullptr;
const Name* NAME_COMMAND_PALETTE = nullptr;
const Name* NAME_COMMAND_INPUT = nullptr;
const Name* NAME_COMMAND_COLON = nullptr;
const Name* NAME_COMMAND_TEXT = nullptr;
const Name* NAME_COMMAND_TEXT_CURSOR = nullptr;
const Name* NAME_COMMAND_TEXT_PREVIEW = nullptr;
const Name* NAME_NOTIFICATION_CONTAINER = nullptr;
const Name* NAME_NOTIFICATION = nullptr;
const Name* NAME_NOTIFICATION_TEXT = nullptr;
const Name* NAME_ASSET_NAME_CONTAINER = nullptr;
const Name* NAME_ASSET_NAME = nullptr;
const Name* NAME_A = nullptr;
const Name* NAME_E = nullptr;
const Name* NAME_M = nullptr;
const Name* NAME_R = nullptr;
const Name* NAME_NEW = nullptr;
const Name* NAME_N = nullptr;
const Name* NAME_EDIT = nullptr;
const Name* NAME_S = nullptr;
const Name* NAME_RENAME = nullptr;
const Name* NAME_SAVE = nullptr;
const Name* NAME_MESH = nullptr;
const Name* NAME_SKELETON = nullptr;
const Name* NAME_ANIMATION = nullptr;

// @path
const Name* PATH_TEXTURE_PALETTE = nullptr;
const Name* PATH_STYLESHEET_VIEW = nullptr;
const Name* PATH_STYLESHEET_NOTIFICATIONS = nullptr;
const Name* PATH_STYLESHEET_MESH_EDITOR = nullptr;
const Name* PATH_STYLESHEET_COMMAND_PALETTE = nullptr;
const Name* PATH_SHADER_VFX = nullptr;
const Name* PATH_SHADER_UI = nullptr;
const Name* PATH_SHADER_TEXT = nullptr;
const Name* PATH_SHADER_LIT = nullptr;
const Name* PATH_FONT_SEGUISB = nullptr;

// @load
bool LoadAssets(Allocator* allocator)
{
    // @name
    NAME_COLOR_PICKER_IMAGE = GetName("color_picker_image");
    NAME_COMMAND_PALETTE = GetName("command_palette");
    NAME_COMMAND_INPUT = GetName("command_input");
    NAME_COMMAND_COLON = GetName("command_colon");
    NAME_COMMAND_TEXT = GetName("command_text");
    NAME_COMMAND_TEXT_CURSOR = GetName("command_text_cursor");
    NAME_COMMAND_TEXT_PREVIEW = GetName("command_text_preview");
    NAME_NOTIFICATION_CONTAINER = GetName("notification_container");
    NAME_NOTIFICATION = GetName("notification");
    NAME_NOTIFICATION_TEXT = GetName("notification_text");
    NAME_ASSET_NAME_CONTAINER = GetName("asset_name_container");
    NAME_ASSET_NAME = GetName("asset_name");
    NAME_A = GetName("a");
    NAME_E = GetName("e");
    NAME_M = GetName("m");
    NAME_R = GetName("r");
    NAME_NEW = GetName("new");
    NAME_N = GetName("n");
    NAME_EDIT = GetName("edit");
    NAME_S = GetName("s");
    NAME_RENAME = GetName("rename");
    NAME_SAVE = GetName("save");
    NAME_MESH = GetName("mesh");
    NAME_SKELETON = GetName("skeleton");
    NAME_ANIMATION = GetName("animation");

    // @path
    PATH_TEXTURE_PALETTE = GetName("texture/palette");
    PATH_STYLESHEET_VIEW = GetName("stylesheet/view");
    PATH_STYLESHEET_NOTIFICATIONS = GetName("stylesheet/notifications");
    PATH_STYLESHEET_MESH_EDITOR = GetName("stylesheet/mesh_editor");
    PATH_STYLESHEET_COMMAND_PALETTE = GetName("stylesheet/command_palette");
    PATH_SHADER_VFX = GetName("shader/vfx");
    PATH_SHADER_UI = GetName("shader/ui");
    PATH_SHADER_TEXT = GetName("shader/text");
    PATH_SHADER_LIT = GetName("shader/lit");
    PATH_FONT_SEGUISB = GetName("font/seguisb");

    // @Font
    NOZ_LOAD_FONT(allocator, PATH_FONT_SEGUISB, FONT_SEGUISB);

    static Font* _FONT[] = {
        FONT_SEGUISB,
        nullptr
    };

    FONT = _FONT;

    // @Shader
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_VFX, SHADER_VFX);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_UI, SHADER_UI);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_TEXT, SHADER_TEXT);
    NOZ_LOAD_SHADER(allocator, PATH_SHADER_LIT, SHADER_LIT);

    static Shader* _SHADER[] = {
        SHADER_VFX,
        SHADER_UI,
        SHADER_TEXT,
        SHADER_LIT,
        nullptr
    };

    SHADER = _SHADER;

    // @StyleSheet
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_VIEW, STYLESHEET_VIEW);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_NOTIFICATIONS, STYLESHEET_NOTIFICATIONS);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_MESH_EDITOR, STYLESHEET_MESH_EDITOR);
    NOZ_LOAD_STYLESHEET(allocator, PATH_STYLESHEET_COMMAND_PALETTE, STYLESHEET_COMMAND_PALETTE);

    static StyleSheet* _STYLESHEET[] = {
        STYLESHEET_VIEW,
        STYLESHEET_NOTIFICATIONS,
        STYLESHEET_MESH_EDITOR,
        STYLESHEET_COMMAND_PALETTE,
        nullptr
    };

    STYLESHEET = _STYLESHEET;

    // @Texture
    NOZ_LOAD_TEXTURE(allocator, PATH_TEXTURE_PALETTE, TEXTURE_PALETTE);

    static Texture* _TEXTURE[] = {
        TEXTURE_PALETTE,
        nullptr
    };

    TEXTURE = _TEXTURE;

    return true;
}

// @unload
void UnloadAssets()
{
    // @Font
    Free(FONT_SEGUISB);

    // @Shader
    Free(SHADER_VFX);
    Free(SHADER_UI);
    Free(SHADER_TEXT);
    Free(SHADER_LIT);

    // @StyleSheet
    Free(STYLESHEET_VIEW);
    Free(STYLESHEET_NOTIFICATIONS);
    Free(STYLESHEET_MESH_EDITOR);
    Free(STYLESHEET_COMMAND_PALETTE);

    // @Texture
    Free(TEXTURE_PALETTE);
}

#ifdef NOZ_EDITOR

void HotloadAsset(const Name* incoming_name)
{
    // @Font
    NOZ_RELOAD_FONT(PATH_FONT_SEGUISB, FONT_SEGUISB);

    // @Shader
    NOZ_RELOAD_SHADER(PATH_SHADER_VFX, SHADER_VFX);
    NOZ_RELOAD_SHADER(PATH_SHADER_UI, SHADER_UI);
    NOZ_RELOAD_SHADER(PATH_SHADER_TEXT, SHADER_TEXT);
    NOZ_RELOAD_SHADER(PATH_SHADER_LIT, SHADER_LIT);

    // @StyleSheet
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_VIEW, STYLESHEET_VIEW);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_NOTIFICATIONS, STYLESHEET_NOTIFICATIONS);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_MESH_EDITOR, STYLESHEET_MESH_EDITOR);
    NOZ_RELOAD_STYLESHEET(PATH_STYLESHEET_COMMAND_PALETTE, STYLESHEET_COMMAND_PALETTE);

    // @Texture
    NOZ_RELOAD_TEXTURE(PATH_TEXTURE_PALETTE, TEXTURE_PALETTE);
}

#endif // NOZ_EDITOR
