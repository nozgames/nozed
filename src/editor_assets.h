//
// Auto-generated asset header - DO NOT EDIT MANUALLY
// Generated by NoZ Game Engine Asset Importer
//

// @fonts
// LoadedAssets.fonts.seguisb
//
// @shaders
// LoadedAssets.shaders.lit
// LoadedAssets.shaders.text
// LoadedAssets.shaders.ui
// LoadedAssets.shaders.vfx
//
// @stylesheets
// LoadedAssets.ui.command_palette
// LoadedAssets.ui.mesh_editor
// LoadedAssets.ui.notifications
// LoadedAssets.ui.view
//
// @textures
// LoadedAssets.textures.palette
//

#pragma once

#include <noz/core_assets.h>

// Forward declarations
struct Allocator;
struct Shader;
struct Vfx;
struct Texture;
struct Mesh;
struct Font;
struct Material;
struct Skeleton;
struct Sound;

struct LoadedAssets
{
    struct
    {
        const Name* fonts_seguisb;
        const Name* shaders_lit;
        const Name* shaders_text;
        const Name* shaders_ui;
        const Name* shaders_vfx;
        const Name* textures_palette;
        const Name* ui_command_palette;
        const Name* ui_mesh_editor;
        const Name* ui_notifications;
        const Name* ui_view;
    } paths;
    struct
    {
        Font* seguisb;
    } fonts;
    struct
    {
        Shader* lit;
        Shader* text;
        Shader* ui;
        Shader* vfx;
    } shaders;
    struct
    {
        Texture* palette;
    } textures;
    struct
    {
        StyleSheet* command_palette;
        StyleSheet* mesh_editor;
        StyleSheet* notifications;
        StyleSheet* view;
    } ui;
};

struct LoadedNames
{
    const Name* color_picker_image;
    const Name* command_palette;
    const Name* command_input;
    const Name* command_colon;
    const Name* command_text;
    const Name* command_text_cursor;
    const Name* command_text_preview;
    const Name* asset_name_container;
    const Name* asset_name;
    const Name* notification_container;
    const Name* notification;
    const Name* notification_text;
    const Name* r;
    const Name* rename;
    const Name* save;
    const Name* e;
    const Name* edit;
    const Name* n;
    const Name* _new;
    const Name* s;
    const Name* mesh;
    const Name* skeleton;
    const Name* animation;
};

extern LoadedAssets g_assets;
extern LoadedNames g_names;
extern LoadedCoreAssets g_core_assets;

bool LoadAssets(Allocator* allocator);
void UnloadAssets();

#ifdef NOZ_EDITOR
void HotloadAsset(const Name* incoming_name);
#endif
